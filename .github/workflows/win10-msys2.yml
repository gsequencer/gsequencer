name: Microsoft Windows MSys2

on:   
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - seed

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: msys2-test

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: windows-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Clone repository and gnulib
        run: |
          docker run $IMAGE_ID:$VERSION bash -c "git clone https://github.com/gsequencer/gsequencer.git"
          docker run $IMAGE_ID:$VERSION bash -c "git clone git://git.sv.gnu.org/gnulib.git"
          docker run $IMAGE_ID:$VERSION bash -c "wget -c http://xn--krhemann-1za.com/download/ags-user-manual.pdf"

      - name: Run gnulib-tool
        run: |
          docker run $IMAGE_ID:$VERSION bash -c "cd gsequencer && ../gnulib/gnulib-tool --import langinfo regex signal-h sigaction strings sys_types memcpy"

      - name: Patch files
        run: |
          docker run $IMAGE_ID:$VERSION bash -c "cd gsequencer && patch -p0 < configure-ac.patch && patch -p0 < makefile-am.patch"

      - name: Configure and build
        run: |
          docker run $IMAGE_ID:$VERSION bash -c "cd gsequencer && autoreconf -fi && PATH=/mingw64/bin:/mingw64/x86_64/bin $PATH PKG_CONFIG_PATH=/mingw64/lib/pkgconfig:/mingw64/share/pkgconfig CPATH=/mingw64/include ./configure --prefix=/mingw64 --disable-rt --enable-w32api --disable-alsa --disable-jack --disable-pulse --enable-wasapi --disable-x11 --without-webkit --with-poppler && make"

      - name: Install and package
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          docker run $IMAGE_ID:$VERSION bash -c "cd gsequencer && make install"
          docker run $IMAGE_ID:$VERSION bash -c "mkdir -v -p ./GSequencer-$VERSION-x86_64/{LV2,dssi,etc,ladspa,lib,libexec,share}"
          docker run $IMAGE_ID:$VERSION bash -c "mkdir -v -p ./GSequencer-$VERSION-x86_64/share/doc/gsequencer-doc/pdf/"
          docker run $IMAGE_ID:$VERSION bash -c "cp -a -v /mingw64/libexec ./GSequencer-$VERSION-x86_64/"
          docker run $IMAGE_ID:$VERSION bash -c "cp -a -v /mingw64/etc ./GSequencer-$VERSION-x86_64/"
          docker run $IMAGE_ID:$VERSION bash -c "cp -a -v /mingw64/lib ./GSequencer-$VERSION-x86_64/"
          docker run $IMAGE_ID:$VERSION bash -c "cp -a -v /mingw64/share ./GSequencer-$VERSION-x86_64/"
          docker run $IMAGE_ID:$VERSION bash -c "cp -a -v /mingw64/bin/{gsequencer,midi2xml}.exe ./GSequencer-$VERSION-x86_64/"
          docker run $IMAGE_ID:$VERSION bash -c "cp -a -v /mingw64/bin/*.dll ./GSequencer-$VERSION-x86_64/"
          docker run $IMAGE_ID:$VERSION bash -c "cp -a -v ags-user-manual.pdf ./share/doc/gsequencer-doc/pdf/"
          docker run $IMAGE_ID:$VERSION bash -c "zip -r GSequencer-$VERSION-x86_64.zip GSequencer-$VERSION-x86_64"
