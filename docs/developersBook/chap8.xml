<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter>

<!-- Copyright (C) 2005-2018 Jo\u00EBl Kr\u00E4hemann -->
<!-- Permission is granted to copy, distribute and/or modify this document -->
<!-- under the terms of the GNU Free Documentation License, Version 1.3 -->
<!-- or any later version published by the Free Software Foundation; -->
<!-- with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. -->
<!-- A copy of the license is included in the section entitled "GNU -->
<!-- Free Documentation License". -->

<chapter xmlns="http://docbook.org/ns/docbook"
	 xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0">
  <title>Your audio data in AgsAudioSignal</title>
  <para>
    AgsAudioSignal is the object orientated representation of your audio data.
    It has a GList with data pointer to audio buffers. There convenience functions
    to resize the stream.
  </para>

  <itemizedlist mark="bullet">
    <listitem>
      <code language="C">void ags_audio_signal_stream_resize(AgsAudioSignal*, guint)</code>
    </listitem>
    <listitem>
      <code language="C">void ags_audio_signal_stream_safe_resize(AgsAudioSignal*, guint)</code>
    </listitem>
    <listitem>
      <code language="C">void ags_audio_signal_add_stream(AgsAudioSignal*)</code>
    </listitem>
  </itemizedlist>

  <para>
    There exists a safe resize function because the audio signal might be in use
    and it doesn't allow to shrink beyond used entries. This could be fatal if
    an effect processor is using the stream and it gets freed as it uses it.
  </para>

  <para>
    <code language="C">void ags_audio_signal_duplicate_stream(AgsAudioSignal*, AgsAudioSignal*)</code>
    can be used to blue-print one audio signals buffer to an other audio signal. Or you might call
    <code language="C">AgsAudioSignal* ags_audio_signal_get_template(GList*)</code>
    from your AgsRecycling internal GList of audio signals to get the template.
  </para>
</chapter>
